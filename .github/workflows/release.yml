name: Release

on:
  release:
    types: [ published, created, edited, prereleased, released ]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag for this release (e.g., v1.0.0)'
        required: true

permissions:
  contents: write

jobs:
  make_draft:
    name: Make draft release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_draft.outputs.release_id }}
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Get version
        id: get_version
        shell: bash
        run: |
          if [[ ${{ github.event_name }} == 'release' ]]; then
            version=${GITHUB_REF#refs/tags/}
          else
            version=${{ github.event.inputs.tag_name }}
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "version-found: $version"
      
      - name: Create draft
        id: create_draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ ${{ github.event_name }} == 'release' ]]; then
            # Convert existing release to draft
            release_id=$(gh release edit ${{ github.event.release.tag_name }} --draft | grep -oP 'releases/tag/\K.*')
          else
            # Create new draft release
            release_id=$(gh release create ${{ steps.get_version.outputs.version }} --draft --title "${{ steps.get_version.outputs.version }}" --generate-notes | grep -oP 'releases/tag/\K.*')
          fi
          echo "release_id=$release_id" >> $GITHUB_OUTPUT

  build:
    name: Build
    needs: make_draft
    runs-on: ubuntu-latest
    env:
      release_id: ${{needs.make_draft.outputs.release_id}}
      version: ${{needs.make_draft.outputs.version}}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Foreman
        uses: Roblox/setup-foreman@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Toolchain
        run: foreman install

      - name: Run script
        run: lune run release

      - name: Upload libraries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd output
          for dir in */; do
            dir=${dir%/}
            (cd "$dir" && zip -r "../${dir}.zip" .)
            echo "Uploading ${dir}.zip"
            gh release upload ${{ env.release_id }} "${dir}.zip" --clobber
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: rbxlibs-${{ env.version }}-ALL-LIBS
          path: output